#pragma once
#pragma COMPUTE_SHADER_ENTRYPOINT(PlanetGenerator)
#include "/Engine/Public/Platform.ush"

int size;
float baseDepthScale;
RWStructuredBuffer<float> outIsoValues;

int GetIsoIndex(int3 coord)
{
    int maxIsoCount = (size) * (size) * (size);
    int index = coord.x + coord.y * (size) + coord.z * (size) * (size);
    return max(0, min(index, maxIsoCount + 1));
}

[numthreads(THREADS_X, THREADS_Y, THREADS_Z)]
void PlanetGenerator(int3 id : SV_DispatchThreadID)
{
    if (any(id >= size))
        return;

    float isoScale = (baseDepthScale / (size));
    float3 position = (id * isoScale);
    float centerDis = isoScale * (size / 2);
    float3 center = float3(centerDis, centerDis, centerDis);
    
    float3 diff = position - center;
    int NoiseIdx = GetIsoIndex(id);
    float distance = sqrt(dot(diff, diff));
    distance = distance / 350;
    float isoValue = clamp(distance, 0.0, 1.0);
    outIsoValues[NoiseIdx] = isoValue;
}
